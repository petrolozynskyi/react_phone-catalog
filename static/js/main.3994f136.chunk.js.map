{"version":3,"sources":["Components/favoritescontext/FavoriteContext.js","Components/cartcontext/cartcontext.js","Components/header/header.tsx","Components/footer/footer.tsx","Components/Likecontext/likecontext.tsx","Layouts/MainLayout.tsx","Components/Carousel/carousel.tsx","Components/ProductCard/Productcard.tsx","Components/HotPrices/hotprices.tsx","Components/Categories/categories.tsx","Components/NewModels/newmodels.tsx","Pages/Home.tsx","Components/Youmayalsolike/youmay.tsx","Components/details/details.tsx","Components/Phones/phones.tsx","Components/Tablets/tablets.tsx","Components/Favorites/favorites.tsx","Components/CartCard/cartcard.tsx","Components/useproducts/useProducts.js","Components/Cart/cart.tsx","Routes/routes.tsx","App.tsx","index.tsx"],"names":["FavoriteContext","createContext","useFavoriteContext","context","useContext","Error","FavoriteProvider","children","useState","favoriteProducts","setFavoriteProducts","useEffect","storedFavorites","JSON","parse","localStorage","getItem","Provider","value","handleLikeClick","productId","updatedFavorites","includes","filter","id","setItem","stringify","ADD_TO_CART","REMOVE_FROM_CART","ADD_TO_FAVORITES","REMOVE_FROM_FAVORITES","initialCartState","cartProducts","CartContext","cartReducer","state","action","type","payload","find","product","map","quantity","updatedCartProducts","updatedQuantity","undefined","Math","max","Boolean","CartProvider","useReducer","dispatch","addToCart","removeFromCart","addToFavorites","removeFromFavorites","useCartContext","Header","location","useLocation","className","to","src","alt","pathname","length","Footer","href","LikeContext","LikeProvider","likedProducts","setLikedProducts","likedCount","setLikedCount","toggleLike","prevLikedProducts","count","MainLayout","style","maxWidth","margin","Carousel","currentIndex","setCurrentIndex","basePath","images","goToSlide","index","goToPrev","prevIndex","goToNext","onClick","onKeyDown","e","key","role","tabIndex","transform","image","ProductCard","currentProduct","setCurrentProduct","fetchData","a","fetch","response","json","data","foundProduct","item","imageUrl","name","discount","discountedPrice","price","calculateDiscountedPrice","screen","capacity","ram","some","HotPrices","discountedProducts","startIndex","setStartIndex","setCartProducts","storedFavoritesString","prevFavorites","disabled","min","slice","onAddToFavorite","updatedFavoriteProducts","handleAddToFavorite","onAddToCart","handleAddToCart","Categories","tablets","phones","accessories","productCounts","setProductCounts","then","counts","reduce","acc","newAcc","catch","Newmodels","filteredProducts","Home","setDiscountedProducts","setFilteredProducts","filteredDiscountedProducts","prevDiscountedProducts","error","storedCartString","storedCart","YouMay","toString","ProductDetailsPage","useParams","productDetails","setProductDetails","selectedPicture","setSelectedPicture","liked","setLiked","selectedCapacity","setSelectedCapacity","selectedColor","setSelectedColor","display","screenSize","screenResolution","hardware","cpu","storage","flash","camera","primary","connectivity","cell","description","handleColorClick","color","handlePictureClick","onKeyPress","handleCapacityClick","prev","ok","status","statusText","filterPhones","searchInput","phone","toLowerCase","calculateProductCounts","Phones","setPhones","currentPage","setCurrentPage","itemsPerPage","setItemsPerPage","sortBy","setSortBy","setSearchInput","fetchDataAndSetState","phoneProducts","filteredPhones","getRangeForCurrentPage","endIndex","htmlFor","onChange","target","parseInt","placeholder","width","height","sort","b","localeCompare","prevPage","Array","from","ceil","_","page","Tablets","setTablets","filteredTablets","tablet","updatedAcc","Favorites","filteredFavorites","CartCard","setProduct","getCounterForProduct","cartProduct","useProducts","products","setProducts","Cart","total","setTotal","handleRemoveFromCart","calculatedTotal","calculateTotal","onRemoveFromCart","toFixed","Router","createBrowserRouter","path","element","App","router","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3994f136.chunk.js","sourcesContent":["// FavoriteProvider.jsx\nimport React, {\n  createContext, useContext, useState, useEffect,\n} from 'react';\n\nconst FavoriteContext = createContext();\n\nexport const useFavoriteContext = () => {\n  const context = useContext(FavoriteContext);\n\n  if (!context) {\n    throw new Error(\n      'useFavoriteContext must be used within a FavoriteProvider',\n    );\n  }\n\n  return context;\n};\n\nexport const FavoriteProvider = ({ children }) => {\n  const [favoriteProducts, setFavoriteProducts] = useState([]);\n\n  useEffect(() => {\n    const storedFavorites = JSON.parse(localStorage.getItem('favorites')) || [];\n\n    setFavoriteProducts(storedFavorites);\n  }, []);\n\n  const handleLikeClick = (productId) => {\n    const updatedFavorites = favoriteProducts.includes(productId)\n      ? favoriteProducts.filter((id) => id !== productId)\n      : [...favoriteProducts, productId];\n\n    setFavoriteProducts(updatedFavorites);\n    localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n  };\n\n  return (\n    <FavoriteContext.Provider value={\n      { favoriteProducts, handleLikeClick, setFavoriteProducts }\n    }\n    >\n      {children}\n    </FavoriteContext.Provider>\n  );\n};\n","// cartcontext.js\nimport React, {\n  createContext, useContext, useReducer, useEffect,\n} from 'react';\n\nconst ADD_TO_CART = 'ADD_TO_CART';\nconst REMOVE_FROM_CART = 'REMOVE_FROM_CART';\nconst ADD_TO_FAVORITES = 'ADD_TO_FAVORITES';\nconst REMOVE_FROM_FAVORITES = 'REMOVE_FROM_FAVORITES';\n\nconst initialCartState = {\n  cartProducts: JSON.parse(localStorage.getItem('cart')) || [],\n  favoriteProducts: JSON.parse(localStorage.getItem('favorites')) || [],\n};\n\nconst CartContext = createContext();\n\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case ADD_TO_CART: {\n      const productId = action.payload;\n      const existingProduct = state.cartProducts\n        .find((product) => product.id === productId);\n\n      if (existingProduct) {\n        return {\n          ...state,\n          cartProducts: state.cartProducts.map(\n            (product) => (product.id === productId\n              ? {\n                ...product,\n                quantity: (product.quantity || 0) + 1,\n              } : product),\n          ),\n        };\n      }\n\n      return {\n        ...state,\n        cartProducts: [...state.cartProducts, { id: productId, quantity: 1 }],\n      };\n    }\n\n    case REMOVE_FROM_CART: {\n      const productId = action.payload;\n      const updatedCartProducts = state.cartProducts.map((product) => {\n        if (product.id === productId) {\n          const updatedQuantity = product.quantity !== undefined\n            ? Math.max(product.quantity - 1, 0) : 0;\n\n          return updatedQuantity > 0\n            ? { ...product, quantity: updatedQuantity } : null;\n        }\n\n        return product;\n      }).filter(Boolean); // Удаляем товары, у которых quantity стало равно 0\n\n      return {\n        ...state,\n        cartProducts: updatedCartProducts,\n      };\n    }\n\n    case ADD_TO_FAVORITES: {\n      const productId = action.payload;\n\n      return {\n        ...state,\n        favoriteProducts: [...state.favoriteProducts, productId],\n      };\n    }\n\n    case REMOVE_FROM_FAVORITES: {\n      const productId = action.payload;\n\n      return {\n        ...state,\n        favoriteProducts: state.favoriteProducts\n          .filter((id) => id !== productId),\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport const CartProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(cartReducer, initialCartState);\n\n  const addToCart = (productId) => {\n    dispatch({ type: ADD_TO_CART, payload: productId });\n  };\n\n  const removeFromCart = (productId) => {\n    dispatch({ type: REMOVE_FROM_CART, payload: productId });\n  };\n\n  const addToFavorites = (productId) => {\n    dispatch({ type: ADD_TO_FAVORITES, payload: productId });\n  };\n\n  const removeFromFavorites = (productId) => {\n    dispatch({ type: REMOVE_FROM_FAVORITES, payload: productId });\n  };\n\n  useEffect(() => {\n    localStorage.setItem('cart', JSON.stringify(state.cartProducts));\n  }, [state.cartProducts]);\n\n  useEffect(() => {\n    localStorage.setItem('favorites', JSON.stringify(state.favoriteProducts));\n  }, [state.favoriteProducts]);\n\n  return (\n    <CartContext.Provider\n      value={{\n        ...state,\n        addToCart,\n        removeFromCart,\n        addToFavorites,\n        removeFromFavorites,\n      }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};\n\nexport const useCartContext = () => {\n  const context = useContext(CartContext);\n\n  if (!context) {\n    throw new Error('useCartContext must be used within a CartProvider');\n  }\n\n  return context;\n};\n","// header.jsx\nimport React from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport './header.scss';\nimport { useFavoriteContext } from '../favoritescontext/FavoriteContext';\nimport { useCartContext } from '../cartcontext/cartcontext';\n\nexport const Header: React.FC = () => {\n  const location = useLocation();\n  const { favoriteProducts } = useFavoriteContext();\n  const { cartProducts } = useCartContext();\n\n  return (\n    <header className=\"header\">\n      <NavLink to=\"/\">\n        <img src=\"/img/Logo.svg\" alt=\"Logo\" className=\"logo__image\" />\n      </NavLink>\n      <nav className=\"nav\">\n        <ul>\n          <li className=\"le\">\n            <NavLink to=\"/\">\n              Home\n            </NavLink>\n          </li>\n          <li className=\"le\">\n            <NavLink to=\"/phones\">\n              Phones\n            </NavLink>\n          </li>\n          <li className=\"le\">\n            <NavLink to=\"/tablets\">\n              Tablets\n            </NavLink>\n          </li>\n          <li className=\"le\">\n            <NavLink to=\"/accessories\">\n              Accessories\n            </NavLink>\n          </li>\n        </ul>\n        <ul>\n          <li>\n            <div className={`rectangle ${location.pathname.includes('/cart') ? 'activeLink' : ''}`}>\n              <NavLink to=\"/cart\" className=\"a\">\n                <img src=\"/img/Group.svg\" alt=\"Logo\" className=\"\" />\n                {cartProducts.length > 0 && (\n                  <div className=\"cart-count\">{cartProducts.length}</div>\n                )}\n              </NavLink>\n            </div>\n          </li>\n          <li>\n            <div className={`rectangle ${location.pathname.includes('/favourites') ? 'activeLink' : ''}`}>\n              <NavLink to=\"/favourites\">\n                <img src=\"/img/Favourites.svg\" alt=\"Logo\" className=\"\" />\n                {favoriteProducts.length > 0 && (\n                  <div className=\"favorite-count\">\n                    {favoriteProducts.length}\n                  </div>\n                )}\n              </NavLink>\n            </div>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport './footer.scss';\n\nconst Footer: React.FC = () => {\n  return (\n    <footer className=\"footer\">\n      <div className=\"footer-content\">\n        <div className=\"footer-section1\">\n          <a href=\"#home\">\n            <img src=\"/img/Logo.svg\" alt=\"Logo\" className=\"logo__image\" />\n          </a>\n        </div>\n        <div className=\"footer-section2\">\n          <ul>\n            <li><a href=\"/github\">GITHUB</a></li>\n            <li><a href=\"/contacts\">CONTACTS</a></li>\n            <li><a href=\"/rights\">RIGHTS</a></li>\n          </ul>\n        </div>\n        <div className=\"footer-section3\">\n          <h2>Back to top</h2>\n          <img src=\"/img/Chevron-right.svg\" alt=\"Chevron\" className=\"chevron\" />\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, {\n  createContext, useContext, useState, ReactNode,\n} from 'react';\n\ninterface LikeContextProps {\n  likedProducts: string[];\n  likedCount: number;\n  toggleLike: (productId: string) => void;\n}\n\nconst LikeContext = createContext<LikeContextProps | undefined>(undefined);\n\ninterface LikeProviderProps {\n  children: ReactNode;\n}\n\nexport const LikeProvider: React.FC<LikeProviderProps> = ({ children }) => {\n  const [likedProducts, setLikedProducts] = useState<string[]>([]);\n  const [likedCount, setLikedCount] = useState<number>(0);\n\n  const toggleLike = (productId: string) => {\n    if (likedProducts.includes(productId)) {\n      setLikedProducts((prevLikedProducts) => prevLikedProducts\n        .filter((id) => id !== productId));\n      setLikedCount((count) => count - 1);\n    } else {\n      setLikedProducts((prevLikedProducts) => [\n        ...prevLikedProducts, productId]);\n      setLikedCount((count) => count + 1);\n    }\n  };\n\n  return (\n    <LikeContext.Provider value={{ likedProducts, likedCount, toggleLike }}>\n      {children}\n    </LikeContext.Provider>\n  );\n};\n\nexport const useLike = (): LikeContextProps => {\n  const context = useContext(LikeContext);\n\n  if (!context) {\n    throw new Error('useLike must be used within a LikeProvider');\n  }\n\n  return context;\n};\n","import { Outlet } from 'react-router-dom';\nimport { Header } from '../Components/header/header';\nimport Footer from '../Components/footer/footer';\nimport { LikeProvider } from '../Components/Likecontext/likecontext';\nimport { FavoriteProvider } from\n  '../Components/favoritescontext/FavoriteContext';\nimport { CartProvider } from '../Components/cartcontext/cartcontext';\n\nexport const MainLayout = () => (\n  <>\n    <FavoriteProvider>\n      <LikeProvider>\n        <CartProvider>\n          <Header />\n          <main style={{ maxWidth: '1200px', margin: '0 auto' }}>\n            <Outlet />\n          </main>\n          <Footer />\n        </CartProvider>\n      </LikeProvider>\n    </FavoriteProvider>\n  </>\n);\n\nexport default MainLayout;\n","// Carousel.tsx\n\nimport { useState } from 'react';\nimport './carousel.scss'; // Import your styling here\n\nexport const Carousel = () => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const basePath = '_new/img/';\n\n  // Concatenate the base path with the image filenames\n  const images = [\n    `${basePath}banner-accessories.png`,\n    `${basePath}banner-phones.png`,\n    `${basePath}banner-tablets.png`,\n  ];\n\n  const goToSlide = (index: number) => {\n    setCurrentIndex(index);\n  };\n\n  const renderDots = () => {\n    return images.map((image, index) => (\n      <div\n        key={image}\n        className={`dot ${index === currentIndex ? 'active' : ''}`}\n        onClick={() => goToSlide(index)}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter' || e.key === ' ') {\n            goToSlide(index);\n          }\n        }}\n        role=\"button\"\n        tabIndex={0} // make the element focusable\n        aria-label={`Slide ${index + 1}`}\n      />\n    ));\n  };\n\n  const goToPrev = () => {\n    setCurrentIndex((prevIndex) => (prevIndex === 0\n      ? images.length - 1 : prevIndex - 1));\n  };\n\n  const goToNext = () => {\n    setCurrentIndex((prevIndex) => (prevIndex === images.length - 1\n      ? 0 : prevIndex + 1));\n  };\n\n  return (\n    <>\n      <div className=\"carousel-container\">\n        <div\n          className=\"button-left\"\n          onClick={goToPrev}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter' || e.key === ' ') {\n              goToPrev();\n            }\n          }}\n          role=\"button\"\n          tabIndex={0}\n          aria-label=\"Previous\"\n        >\n          <img className=\"chevron\" src=\"/img/Chevron-left.svg\" alt=\"Previous\" />\n\n        </div>\n        <div className=\"slider-container\">\n          <div className=\"slides\" style={{ transform: `translateX(-${currentIndex * 100}%)` }}>\n            {images.map((image, index) => (\n              <div key={image} className=\"slide\">\n                <img src={image} alt={`Slide ${index + 1}`} />\n              </div>\n            ))}\n          </div>\n        </div>\n        <div\n          className=\"button-right\"\n          onClick={goToNext}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter' || e.key === ' ') {\n              goToNext();\n            }\n          }}\n          role=\"button\"\n          tabIndex={0} // make the element focusable\n          aria-label=\"Next\"\n        >\n          <img className=\"chevron\" src=\"img/Chevron-right.svg\" alt=\"Next\" />\n        </div>\n      </div>\n      <div\n        className=\"dots-container\"\n      >\n        {renderDots()}\n      </div>\n    </>\n  );\n};\n\nexport default Carousel;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Product } from './types';\nimport './productcard.scss';\nimport { useCartContext } from '../cartcontext/cartcontext';\n\ninterface ProductCardProps {\n  productId: string;\n  // eslint-disable-next-line react/no-unused-prop-types\n  onAddToCart: (productId: string) => void;\n  // eslint-disable-next-line react/no-unused-prop-types\n  onAddToFavorite: (productId: string) => void;\n}\n\nconst ProductCard: React.FC<ProductCardProps>\n  = ({ productId }) => {\n    const [currentProduct, setCurrentProduct] = useState<Product | null>(null);\n    const {\n      cartProducts,\n      addToCart,\n      removeFromCart,\n      favoriteProducts,\n      addToFavorites,\n      removeFromFavorites,\n    } = useCartContext();\n\n    useEffect(() => {\n      const fetchData = async () => {\n        try {\n          const response = await fetch(\n            // eslint-disable-next-line max-len\n            'https://mate-academy.github.io/react_phone-catalog/api/products.json',\n          );\n          const data: Product[] = await response.json();\n\n          const foundProduct = data.find((item) => item.id === productId);\n\n          if (foundProduct) {\n            setCurrentProduct(foundProduct);\n          } else {\n            setCurrentProduct(null);\n          }\n        } catch (error) {\n          addToCart(productId);\n        }\n      };\n\n      fetchData();\n    }, [productId]);\n\n    const handleAddToCartClick = () => {\n      const isProductInCart\n        = cartProducts.some((product: Product) => product.id === productId);\n\n      if (isProductInCart) {\n        removeFromCart(productId);\n      } else {\n        addToCart(productId);\n      }\n    };\n\n    const handleAddToFavoritesClick = () => {\n      const isProductInFavorites = favoriteProducts.includes(productId);\n\n      if (isProductInFavorites) {\n        removeFromFavorites(productId);\n      } else {\n        addToFavorites(productId);\n      }\n    };\n\n    const calculateDiscountedPrice = () => {\n      if (currentProduct && currentProduct.discount) {\n        const discountedPrice = currentProduct.price\n          - (currentProduct.price * currentProduct.discount) / 100;\n\n        return (\n          <div className=\"prices\">\n            <p className=\"discounted-price\">\n              {discountedPrice}\n              $\n            </p>\n            <p className=\"original-price\">\n              {currentProduct.price}\n              $\n            </p>\n          </div>\n        );\n      }\n\n      return (\n        <p className=\"price\">\n          {currentProduct?.price}\n          $\n        </p>\n      );\n    };\n\n    return (\n      <div className=\"product-card\">\n        <Link className=\"Link\" to={`/${productId}`} state={{ product: currentProduct }}>\n          {currentProduct && (\n            <img\n              src={currentProduct.imageUrl}\n              className=\"image\"\n              alt={currentProduct.name}\n            />\n          )}\n          {currentProduct && <h2 className=\"name\">{currentProduct.name}</h2>}\n          {calculateDiscountedPrice()}\n          <div className=\"line\" />\n          {currentProduct && (\n            <>\n              <div className=\"card-field\">\n                <p className=\"screen\">Screen</p>\n                <p>{currentProduct.screen}</p>\n              </div>\n              <div className=\"card-field\">\n                <p className=\"capacity\">Capacity</p>\n                {' '}\n                {currentProduct.capacity}\n              </div>\n              <div className=\"card-field\">\n                <p className=\"ram\">RAM</p>\n                {currentProduct.ram}\n              </div>\n            </>\n          )}\n        </Link>\n        <div className=\"card-buttons\">\n          <button\n            type=\"button\"\n            onClick={handleAddToCartClick}\n            className={cartProducts.some(\n              (product: Product) => product.id === productId,\n            )\n              ? 'button-add added' : 'button-add'}\n          >\n            {cartProducts.some((product: Product) => product.id === productId)\n              ? 'Added to cart' : 'Add to cart'}\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={handleAddToFavoritesClick}\n            className={favoriteProducts.includes(productId)\n              ? 'button-like liked' : 'button-like'}\n          >\n            {/* Your like button content goes here */}\n          </button>\n        </div>\n      </div>\n    );\n  };\n\nexport default ProductCard;\n","import React, { useEffect, Dispatch, SetStateAction } from 'react';\nimport ProductCard from '../ProductCard/Productcard';\nimport './hotprices.scss';\n\ninterface HotPricesProps {\n  discountedProducts: { id: string }[];\n  startIndex: number;\n  setStartIndex: React.Dispatch<React.SetStateAction<number>>;\n  favoriteProducts: string[];\n  setFavoriteProducts: Dispatch<SetStateAction<string[]>>; // Update this line\n  cartProducts: string[];\n  setCartProducts: React.Dispatch<React.SetStateAction<string[]>>;\n}\n\nconst HotPrices: React.FC<HotPricesProps> = ({\n  discountedProducts,\n  startIndex,\n  setStartIndex,\n  favoriteProducts,\n  setFavoriteProducts, // This should be Dispatch<SetStateAction<string[]>>\n  cartProducts,\n  setCartProducts,\n}) => {\n  const handleNext = () => {\n    setStartIndex((prevIndex) => Math.min(\n      prevIndex + 1, discountedProducts.length - 1,\n    ));\n  };\n\n  useEffect(() => {\n    const storedFavoritesString = localStorage.getItem('favorites');\n    const storedFavorites: string[] = storedFavoritesString\n      ? JSON.parse(storedFavoritesString)\n      : [];\n\n    setFavoriteProducts((prevFavorites) => {\n      // Use the previous state to ensure correct types\n      return [...prevFavorites, ...storedFavorites];\n    });\n  }, [setFavoriteProducts]);\n\n  const handlePrev = () => {\n    setStartIndex((prevIndex) => Math.max(prevIndex - 1, 0));\n  };\n\n  const handleAddToCart = (productId: string) => {\n    if (!cartProducts.includes(productId)) {\n      const updatedCartProducts = [...cartProducts, productId];\n\n      setCartProducts(updatedCartProducts);\n      localStorage.setItem('cart', JSON.stringify(updatedCartProducts));\n    }\n  };\n\n  const handleAddToFavorite = (productId: string) => {\n    if (!favoriteProducts.includes(productId)) {\n      const updatedFavoriteProducts = [...favoriteProducts, productId];\n\n      setFavoriteProducts(updatedFavoriteProducts);\n      localStorage.setItem('favorites',\n        JSON.stringify(updatedFavoriteProducts));\n    }\n  };\n\n  return (\n    <div className=\"discount-products-container\">\n      <div className=\"title-holder\">\n        <p className=\"title\" id=\"hotPricesTitle\">Hot prices</p>\n        <div className=\"buttons-container\">\n          <div className=\"button-container\">\n            <button\n              className={`button left ${startIndex === 0 ? 'inactive' : ''}`}\n              onClick={handlePrev}\n              disabled={startIndex === 0}\n              type=\"button\"\n              aria-labelledby=\"hotPricesTitle\"\n            />\n          </div>\n          <div className=\"button-container\">\n            <button\n              className={`button right ${startIndex + 4 >= discountedProducts.length ? 'inactive' : ''}`}\n              onClick={handleNext}\n              disabled={startIndex + 4 >= discountedProducts.length}\n              type=\"button\"\n              aria-labelledby=\"hotPricesTitle\"\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"cards-container\">\n        <div className=\"scrollable-container\">\n          {discountedProducts.length > 0\n            && discountedProducts.slice(\n              startIndex, startIndex + 4,\n            ).map((product) => (\n              <ProductCard\n                key={product.id}\n                productId={product.id}\n                onAddToFavorite={() => handleAddToFavorite(product.id)}\n                onAddToCart={() => handleAddToCart(product.id)}\n              />\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HotPrices;\n","import { useState, useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './categories.scss'; // Import your styles here\n\ninterface Item {\n  type: 'tablet' | 'phone' | 'accessory';\n  // Add other properties based on your actual data structure\n}\n\nexport const Categories = () => {\n  const [productCounts,\n    setProductCounts] = useState({ tablets: 0, phones: 0, accessories: 0 });\n\n  useEffect(() => {\n    fetch(\n      'https://mate-academy.github.io/react_phone-catalog/api/products.json',\n    )\n      .then((response) => response.json())\n      .then((data: Item[]) => {\n        const counts = data.reduce(\n          (acc: {\n            tablets: number;\n            phones: number; accessories: number\n          }, item: Item) => {\n            const newAcc = { ...acc };\n\n            if (item.type === 'tablet') {\n              newAcc.tablets += 1;\n            } else if (item.type === 'phone') {\n              newAcc.phones += 1;\n            } else if (item.type === 'accessory') {\n              newAcc.accessories += 1;\n            }\n\n            return newAcc;\n          }, { tablets: 0, phones: 0, accessories: 0 },\n        );\n\n        setProductCounts(counts);\n      })\n      .catch(() => []);\n  }, []);\n\n  return (\n    <div className=\"categories-container\">\n      <h1 className=\"categories-title\">Shop by Category</h1>\n\n      <div className=\"categories-row\">\n        <NavLink to=\"/phones\" className=\"category\">\n          <img\n            src=\"/img/phones.png\"\n            className=\"category-img phones\"\n            alt=\"phones\"\n          />\n          <h3 className=\"category-name\">Mobile Phones</h3>\n          <p className=\"category-counter\">\n            {productCounts.phones}\n            models\n          </p>\n        </NavLink>\n\n        <NavLink to=\"/tablets\" className=\"category\">\n          <img\n            src=\"/img/tablets.png\"\n            className=\"category-img tablets\"\n            alt=\"tablets\"\n          />\n          <h3 className=\"category-name\">Tablets</h3>\n          <p className=\"category-counter\">\n            {productCounts.tablets}\n            models\n          </p>\n        </NavLink>\n\n        <NavLink to=\"/accessories\" className=\"category\">\n          <img\n            src=\"/img/accesories.png\"\n            className=\"category-img accessories last\"\n            alt=\"accessories\"\n          />\n          <h3 className=\"category-name\">Accessories</h3>\n          <p className=\"category-counter\">\n            {productCounts.accessories}\n            models\n          </p>\n        </NavLink>\n      </div>\n    </div>\n  );\n};\n\nexport default Categories;\n","import ProductCard from '../ProductCard/Productcard';\nimport './newmodels.scss';\n\ninterface NewModelsProps {\n  filteredProducts: { id: string }[];\n  startIndex: number;\n  setStartIndex: React.Dispatch<React.SetStateAction<number>>;\n  favoriteProducts: string[];\n  setFavoriteProducts: React.Dispatch<React.SetStateAction<string[]>>;\n  cartProducts: string[];\n  setCartProducts: React.Dispatch<React.SetStateAction<string[]>>;\n}\n\nconst Newmodels: React.FC<NewModelsProps> = ({\n  filteredProducts,\n  startIndex,\n  setStartIndex,\n  favoriteProducts,\n  setFavoriteProducts,\n  cartProducts,\n  setCartProducts,\n}) => {\n  const handleNext = () => {\n    setStartIndex((prevIndex) => Math.min(\n      prevIndex + 1, filteredProducts.length - 1,\n    ));\n  };\n\n  const handlePrev = () => {\n    setStartIndex((prevIndex) => Math.max(prevIndex - 1, 0));\n  };\n\n  const handleAddToCart = (productId: string) => {\n    if (!cartProducts.includes(productId)) {\n      const updatedCartProducts = [...cartProducts, productId];\n\n      setCartProducts(updatedCartProducts);\n      localStorage.setItem('cart', JSON.stringify(updatedCartProducts));\n    }\n  };\n\n  const handleAddToFavorite = (productId: string) => {\n    if (!favoriteProducts.includes(productId)) {\n      const updatedFavoriteProducts = [...favoriteProducts, productId];\n\n      setFavoriteProducts(updatedFavoriteProducts);\n      localStorage.setItem('favorites',\n        JSON.stringify(updatedFavoriteProducts));\n    }\n  };\n\n  return (\n    <div className=\"discount-products-container\">\n      <div className=\"title-holder\">\n        <p id=\"newModelsTitle\" className=\"title\">Brand new models</p>\n        <div className=\"buttons-container\">\n          <div className=\"button-container\">\n            <button\n              className={`button left ${startIndex === 0 ? 'inactive' : ''}`}\n              onClick={handlePrev}\n              disabled={startIndex === 0}\n              type=\"button\"\n              aria-labelledby=\"newModelsTitle\"\n            />\n          </div>\n          <div className=\"button-container\">\n            <button\n              className={`button right ${startIndex + 4 >= filteredProducts.length ? 'inactive' : ''}`}\n              onClick={handleNext}\n              disabled={startIndex + 4 >= filteredProducts.length}\n              type=\"button\"\n              aria-labelledby=\"newModelsTitle\"\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"cards-container\">\n        <div className=\"scrollable-container\">\n          {filteredProducts.length > 0 && filteredProducts.slice(\n            startIndex, startIndex + 4,\n          ).map((product) => (\n            <ProductCard\n              key={product.id}\n              productId={product.id}\n              onAddToFavorite={() => handleAddToFavorite(product.id)}\n              onAddToCart={() => handleAddToCart(product.id)}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Newmodels;\n","// Home.jsx\nimport { useState, useEffect } from 'react';\nimport { Carousel } from '../Components/Carousel/carousel';\nimport HotPrices from '../Components/HotPrices/hotprices';\nimport { Categories } from '../Components/Categories/categories';\nimport Newmodels from '../Components/NewModels/newmodels';\nimport { Product } from '../Components/ProductCard/types';\n\nconst Home = () => {\n  const [discountedProducts, setDiscountedProducts] = useState<Product[]>([]); // Explicitly provide the type\n  const [filteredProducts, setFilteredProducts] = useState<Product[]>([]); // Provide the type for filteredProducts\n  const [startIndex, setStartIndex] = useState(0);\n  const [favoriteProducts, setFavoriteProducts] = useState<string[]>([]); // Assuming favoriteProducts is an array of strings\n  const [cartProducts, setCartProducts] = useState<string[]>([]); // Assuming cartProducts is an array of strings\n\n  // Fetch and set initial data\n  useEffect(() => {\n    fetch(\n      'https://mate-academy.github.io/react_phone-catalog/api/products.json',\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        setFilteredProducts(data);\n\n        const filteredDiscountedProducts = data.filter(\n          (product: Product) => product.discount !== 0,\n        );\n\n        // Update the type for setDiscountedProducts\n        setDiscountedProducts((prevDiscountedProducts) => [\n          ...prevDiscountedProducts,\n          ...filteredDiscountedProducts,\n        ]);\n      })\n      .catch((error) => setDiscountedProducts([error])); // Initialize with an empty array on error\n\n    const storedFavoritesString = localStorage.getItem('favorites');\n    const storedFavorites = storedFavoritesString\n      ? JSON.parse(storedFavoritesString)\n      : [];\n\n    setFavoriteProducts(storedFavorites);\n\n    const storedCartString = localStorage.getItem('cart');\n    const storedCart = storedCartString ? JSON.parse(storedCartString) : [];\n\n    setCartProducts(storedCart);\n  }, []);\n  // ... (rest of the component)\n\n  return (\n    <>\n      <Carousel />\n      <HotPrices\n        discountedProducts={discountedProducts}\n        startIndex={startIndex}\n        setStartIndex={setStartIndex}\n        favoriteProducts={favoriteProducts}\n        setFavoriteProducts={setFavoriteProducts}\n        cartProducts={cartProducts}\n        setCartProducts={setCartProducts}\n      />\n      <Categories />\n      <Newmodels\n        filteredProducts={filteredProducts}\n        startIndex={startIndex}\n        setStartIndex={setStartIndex}\n        favoriteProducts={favoriteProducts}\n        setFavoriteProducts={setFavoriteProducts}\n        cartProducts={cartProducts}\n        setCartProducts={setCartProducts}\n      />\n    </>\n  );\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport ProductCard from '../ProductCard/Productcard';\nimport './youmay.scss';\n\ninterface Product {\n  id: number;\n  discount: number;\n  // Add other properties based on your actual data structure\n}\n\nconst YouMay: React.FC = () => {\n  const [discountedProducts, setDiscountedProducts] = useState<Product[]>([]);\n  const [startIndex, setStartIndex] = useState(0);\n  const [favoriteProducts, setFavoriteProducts] = useState<string[]>([]);\n\n  useEffect(() => {\n    fetch(\n      'https://mate-academy.github.io/react_phone-catalog/api/products.json',\n    )\n      .then((response) => response.json())\n      .then((data: Product[]) => {\n        const filteredProducts = data.filter(\n          (product) => product.discount !== 0,\n        );\n\n        setDiscountedProducts(filteredProducts);\n      })\n      .catch((error) => setDiscountedProducts([error])); // Set an empty array on error\n  }, []);\n\n  useEffect(() => {\n    const storedFavoritesString: string | null\n      = localStorage.getItem('favorites');\n    const storedFavorites: string[] = storedFavoritesString\n      ? JSON.parse(storedFavoritesString)\n      : [];\n\n    setFavoriteProducts(storedFavorites);\n  }, []);\n\n  const handleNext = () => {\n    setStartIndex((prevIndex) => Math.min(\n      prevIndex + 1, discountedProducts.length - 1,\n    ));\n  };\n\n  const handleAddToFavorite = (productId: string) => {\n    if (!favoriteProducts.includes(productId.toString())) {\n      const updatedFavorites = [...favoriteProducts, productId.toString()];\n\n      setFavoriteProducts(updatedFavorites);\n      localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n    }\n  };\n\n  const handlePrev = () => {\n    setStartIndex((prevIndex) => Math.max(prevIndex - 1, 0));\n  };\n\n  return (\n    <div className=\"discount-products-container\">\n      <div className=\"title-holder\">\n        <p className=\"title\">You may also like</p>\n        <div className=\"buttons-container\">\n          <div className=\"button-container\">\n            <button\n              className={`button left ${startIndex === 0 ? 'inactive' : ''}`}\n              onClick={handlePrev}\n              disabled={startIndex === 0}\n              type=\"button\"\n              aria-label=\"Previous Button\"\n            />\n          </div>\n          <div className=\"button-container\">\n            <button\n              className={`button right ${startIndex + 4 >= discountedProducts.length ? 'inactive' : ''}`}\n              onClick={handleNext}\n              disabled={startIndex + 4 >= discountedProducts.length}\n              type=\"button\"\n              aria-label=\"Next Button\"\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"cards-container\">\n        <div className=\"scrollable-container\">\n          {discountedProducts.length > 0 && (\n            discountedProducts.slice(\n              startIndex, startIndex + 4,\n            ).map((product) => (\n              <ProductCard\n                key={product.id}\n                productId={product.id.toString()}\n                onAddToFavorite={handleAddToFavorite}\n                onAddToCart={() => { }}\n              />\n            ))\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default YouMay;\n","import { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport './details.scss';\nimport YouMay from '../Youmayalsolike/youmay';\nimport { useCartContext } from '../cartcontext/cartcontext';\n\ninterface ProductDetails {\n  name: string;\n  images: string[];\n  display: {\n    screenSize: string;\n    screenResolution: string;\n    // other properties related to display\n  };\n  hardware: {\n    cpu: string;\n    // other properties related to hardware\n  };\n  storage: {\n    ram: string;\n    flash: string;\n    // other properties related to storage\n  };\n  camera: {\n    primary: string;\n    // other properties related to camera\n  };\n  connectivity: {\n    cell: string;\n    // other properties related to connectivity\n  };\n  price: number;\n  discount?: number;\n  description: string;\n}\nconst basePath = '/img/';\n\nconst images = [\n  `${basePath}white.svg`,\n  `${basePath}black.svg`,\n  `${basePath}green.svg`,\n];\n\nconst ProductDetailsPage = () => {\n  const { productId } = useParams<{ productId: string }>();\n  const [productDetails,\n    setProductDetails] = useState<ProductDetails | null>(null);\n  const [selectedPicture, setSelectedPicture] = useState(0);\n  const [liked, setLiked] = useState(false);\n  const [selectedCapacity, setSelectedCapacity] = useState<string | null>(null);\n  const [selectedColor, setSelectedColor] = useState<string | null>(null);\n  const [favoriteProducts, setFavoriteProducts] = useState<string[]>([]);\n  const { addToCart } = useCartContext();\n\n  useEffect(() => {\n    fetch(`https://mate-academy.github.io/react_phone-catalog/api/products/${productId}.json`)\n      .then((response) => response.json())\n      .then((data: ProductDetails) => {\n        setProductDetails(data);\n      })\n      .catch(() => setProductDetails({\n        name: 'Error',\n        images: [],\n        display: { screenSize: '', screenResolution: '' },\n        hardware: { cpu: '' },\n        storage: { ram: '', flash: '' },\n        camera: { primary: '' },\n        connectivity: { cell: '' },\n        price: 0,\n        description: '',\n      }));\n  }, [productId]);\n\n  useEffect(() => {\n    const storedFavoritesString: string | null\n      = localStorage.getItem('favorites');\n\n    if (storedFavoritesString !== null) {\n      const storedFavorites: string[] = JSON.parse(storedFavoritesString);\n\n      setFavoriteProducts(storedFavorites);\n    } else {\n      setFavoriteProducts([]);\n    }\n  }, []);\n\n  const handlePictureClick = (index: number) => {\n    setSelectedPicture(index);\n  };\n\n  const handleColorClick = (color: string) => {\n    setSelectedColor(color);\n  };\n\n  const handleCapacityClick = (capacity: string) => {\n    setSelectedCapacity(capacity);\n  };\n\n  if (!productDetails) {\n    return <div>Loading...</div>;\n  }\n\n  const calculateDiscountedPrice = () => {\n    if (productDetails.discount) {\n      const discountedPrice = productDetails.price\n        - (productDetails.price * productDetails.discount) / 100;\n\n      return (\n        <div className=\"prices\">\n          <p className=\"discounted-price\">\n            {discountedPrice}\n            $\n          </p>\n          <p className=\"original-price\">\n            {productDetails.price}\n            $\n          </p>\n        </div>\n      );\n    }\n\n    return (\n      <p className=\"price\">\n        {productDetails.price}\n        $\n      </p>\n    );\n  };\n\n  const handleLikeClick = () => {\n    setLiked((prev) => !prev);\n  };\n\n  const handleAddToFavorite = () => {\n    if (productId && !favoriteProducts.includes(productId)) {\n      const updatedFavorites = [...favoriteProducts, productId];\n\n      setFavoriteProducts(updatedFavorites);\n      localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n    }\n  };\n\n  const handleAddToFavoritesAndLike = () => {\n    handleAddToFavorite();\n    handleLikeClick();\n  };\n\n  return (\n    <>\n      <div className=\"details\">\n        <div className=\"folder-holder\">\n          <button type=\"button\" className=\"home-button\">\n            <img src=\"/img/home.svg\" alt=\"Home\" />\n          </button>\n          <img\n            src=\"/img/Chevron-right.svg\"\n            alt=\"Chevron\"\n            className=\"folder-chevron\"\n          />\n          <p className=\"page-folder\">Phones</p>\n          <img\n            src=\"/img/Chevron-right.svg\"\n            alt=\"Chevron\"\n            className=\"folder-chevron\"\n          />\n          <p className=\"page-name\">{productDetails.name}</p>\n        </div>\n        <div className=\"page-back__holder\">\n          <img\n            src=\"/img/Chevron-left.svg\"\n            alt=\"Chevron\"\n            className=\"folder-chevron\"\n          />\n          <Link className=\"page-back\" to=\"/\">Back</Link>\n        </div>\n        <div>\n          <h2 className=\"details-title\">{productDetails.name}</h2>\n          <div className=\"product-details\">\n            <div className=\"product-upside\">\n              <div className=\"images-holder\">\n                <div className=\"pictures\">\n                  {productDetails && 'images' in productDetails\n                    && (productDetails.images as string[]\n                    ).map((image, index) => (\n                      <button\n                        type=\"button\"\n                        key={image}\n                        className={`image-holder ${index === selectedPicture ? 'selected-picture' : 'unselected-picture'}`}\n                        onClick={() => handlePictureClick(index)}\n                      >\n                        <img\n                          src={image}\n                          alt={`Product ${index + 1}`}\n                        />\n                      </button>\n                    ))}\n                </div>\n                <div className=\"selected-picture\">\n                  {productDetails.images[selectedPicture] && (\n                    <img\n                      src={productDetails.images[selectedPicture]}\n                      alt=\"Selected Product\"\n                      className=\"selected-picture\"\n                    />\n                  )}\n                </div>\n              </div>\n              <div className=\"product-details2\">\n                <div className=\"colors\">\n                  <p className=\"colors-title\">Available colors</p>\n                  <div className=\"colors-holder\">\n                    {images.map((color) => (\n                      <div\n                        key={color}\n                        role=\"button\"\n                        tabIndex={0}\n                        onClick={() => handleColorClick(color)}\n                        onKeyPress={(e) => {\n                          if (e.key === 'Enter' || e.key === ' ') {\n                            handleColorClick(color);\n                          }\n                        }}\n                      >\n                        <img\n                          src={color}\n                          alt={color}\n                          className={`color ${selectedColor === color ? 'selected' : ''}`}\n                        />\n                      </div>\n                    ))}\n                  </div>\n                  <div className=\"line lined\" />\n                </div>\n                <div className=\"capacity\">\n                  <p className=\"colors-title\">Select capacity</p>\n                  {['64GB', '256GB', '512GB'].map((capacity) => (\n                    <button\n                      key={capacity}\n                      className={`capacity-button ${selectedCapacity === capacity ? 'selected' : ''}`}\n                      onClick={() => handleCapacityClick(capacity)}\n                      type=\"button\"\n                    >\n                      {capacity}\n                    </button>\n                  ))}\n                </div>\n                <div className=\"line\" />\n                <div className=\"add-to-cart\">\n                  <p className=\"price-title\" />\n                  <p>{calculateDiscountedPrice()}</p>\n                  <div className=\"buttons-holder\">\n                    <button\n                      type=\"submit\"\n                      className={addToCart\n                        ? 'button-add added super' : 'button-add super'}\n                      onClick={addToCart}\n                    >\n                      {addToCart ? 'Added to cart' : 'Add to cart'}\n                    </button>\n                    <button\n                      type=\"button\"\n                      onClick={handleAddToFavoritesAndLike}\n                      className={liked\n                        ? 'button-like liked super1' : 'button-like super1'}\n                      aria-label={liked\n                        ? 'Remove from Favorites' : 'Add to Favorites'}\n                    />\n                  </div>\n                </div>\n                <div className=\"SRPR\">\n                  <div className=\"SRPR-title\">\n                    <div className=\"names\">Screen</div>\n                    <div className=\"text\">\n                      {productDetails.display.screenSize}\n                    </div>\n                  </div>\n                  <div className=\"SRPR-title\">\n                    <div className=\"names\">RAM</div>\n                    <div className=\"text\">{productDetails.storage.ram}</div>\n                  </div>\n                  <div className=\"SRPR-title\">\n                    <div className=\"names\">Processor</div>\n                    <div className=\"text\">\n                      {productDetails.hardware.cpu}\n                    </div>\n                  </div>\n                  <div className=\"SRPR-title\">\n                    <div className=\"names\">Resolution </div>\n                    <div className=\"text\">\n                      {productDetails.display.screenResolution}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"product-downside\">\n              <div className=\"about\">\n                <p className=\"about-title\">About</p>\n                <div className=\"line lined\" />\n                <div className=\"description\">{productDetails.description}</div>\n              </div>\n              <div className=\"techspecs\">\n                <p className=\"about-title\">Techspecs</p>\n                <div className=\"line lined\" />\n                <div className=\"specs\">\n                  <div className=\"specs-title\">\n                    <div className=\"specs-name\">Screen</div>\n                    <div className=\"specs-info\">\n                      {productDetails.display.screenSize}\n\n                    </div>\n                  </div>\n                  <div className=\"specs-title\">\n                    <div className=\"specs-name\">Resolution</div>\n                    <div className=\"specs-info\">\n                      {productDetails.display.screenResolution}\n                    </div>\n                  </div>\n                  <div className=\"specs-title\">\n                    <div className=\"specs-name\">Processor</div>\n                    <div className=\"specs-info\">\n                      {productDetails.hardware.cpu}\n                    </div>\n                  </div>\n                  <div className=\"specs-title\">\n                    <div className=\"specs-name\">RAM</div>\n                    <div className=\"specs-info\">\n                      {productDetails.storage.ram}\n                    </div>\n                  </div>\n                  <div className=\"specs-title\">\n                    <div className=\"specs-name\">Built-in memory</div>\n                    <div className=\"specs-info\">\n                      {productDetails.storage.flash}\n                    </div>\n                  </div>\n                  <div className=\"specs-title\">\n                    <div className=\"specs-name\">Camera</div>\n                    <div className=\"specs-info\">\n                      {productDetails.camera.primary}\n                    </div>\n                  </div>\n                  <div className=\"specs-title\">\n                    <div className=\"specs-name\">Cell</div>\n                    <div className=\"specs-info\">\n                      {productDetails.connectivity.cell}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <YouMay />\n      </div>\n    </>\n  );\n};\n\nexport default ProductDetailsPage;\n","import React, { useState, useEffect } from 'react';\nimport ProductCard from '../ProductCard/Productcard';\nimport './Phones.scss';\n\ninterface Phone {\n  id: string;\n  type: string;\n  name: string;\n  price: number;\n  discount?: number;\n}\n\nconst fetchData = async (): Promise<Phone[]> => {\n  const response = await fetch(\n    'https://mate-academy.github.io/react_phone-catalog/api/products.json',\n  );\n\n  if (!response.ok) {\n    throw new Error(`Failed to fetch data: ${response.status} ${response.statusText}`);\n  }\n\n  const data: Phone[] = await response.json();\n\n  return data;\n};\n\nconst filterPhones = (data: Phone[], searchInput: string): Phone[] => {\n  return data.filter((phone) => phone.type === 'phone'\n    && phone.name.toLowerCase().includes(searchInput.toLowerCase()));\n};\n\nconst calculateProductCounts = (data: Phone[]): {\n  tablets: number; phones: number; accessories: number\n} => {\n  return data.reduce((acc, item) => {\n    if (item.type === 'tablet') {\n      return { ...acc, tablets: acc.tablets + 1 };\n    }\n\n    if (item.type === 'phone') {\n      return { ...acc, phones: acc.phones + 1 };\n    }\n\n    if (item.type === 'accessory') {\n      return { ...acc, accessories: acc.accessories + 1 };\n    }\n\n    return acc;\n  }, { tablets: 0, phones: 0, accessories: 0 });\n};\n\nconst Phones: React.FC = () => {\n  const [phones, setPhones] = useState<Phone[]>([]);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [itemsPerPage, setItemsPerPage] = useState<number>(16);\n  const [sortBy, setSortBy] = useState<string>('name');\n  const [productCounts, setProductCounts]\n    = useState({ tablets: 0, phones: 0, accessories: 0 });\n  const [favoriteProducts, setFavoriteProducts] = useState<string[]>([]);\n  const [searchInput, setSearchInput] = useState<string>('');\n\n  useEffect(() => {\n    const storedFavorites: string[]\n      = JSON.parse(localStorage.getItem('favorites') ?? '[]');\n\n    setFavoriteProducts(storedFavorites);\n  }, []);\n\n  useEffect(() => {\n    const fetchDataAndSetState = async () => {\n      try {\n        const data = await fetchData();\n        const phoneProducts\n          = data.filter((product) => product.type === 'phone');\n        const filteredPhones = filterPhones(phoneProducts, searchInput);\n\n        setPhones(filteredPhones);\n        const counts = calculateProductCounts(data);\n\n        setProductCounts(counts);\n      } catch (error) {\n        // Handle error, if needed\n      }\n    };\n\n    fetchDataAndSetState();\n  }, [searchInput]);\n\n  const handleAddToFavorite = (productId: string) => {\n    if (!favoriteProducts.includes(productId)) {\n      const updatedFavorites = [...favoriteProducts, productId];\n\n      setFavoriteProducts(updatedFavorites);\n      localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n    }\n  };\n\n  const handleSortChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setSortBy(e.target.value);\n    setCurrentPage(1);\n  };\n\n  const handlePageChange = (newPage: number) => {\n    setCurrentPage(newPage);\n  };\n\n  const handleItemsPerPageChange = (\n    e: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    setItemsPerPage(parseInt(e.target.value, 10));\n    setCurrentPage(1);\n  };\n\n  const sortProducts = (data: Phone[]): Phone[] => {\n    return data.sort((a, b) => {\n      if (sortBy === 'name') {\n        return a.name.localeCompare(b.name);\n      }\n\n      if (sortBy === 'price') {\n        return a.price - b.price;\n      }\n\n      if (sortBy === 'discount') {\n        return (b.discount || 0) - (a.discount || 0);\n      }\n\n      return 0;\n    });\n  };\n\n  const getRangeForCurrentPage = (): {\n    startIndex: number; endIndex: number\n  } => {\n    const startIndex = (currentPage - 1) * itemsPerPage;\n    const endIndex = startIndex + itemsPerPage;\n\n    return { startIndex, endIndex };\n  };\n\n  const handleNextPage = () => {\n    setCurrentPage((prevPage) => Math.min(prevPage + 1,\n      Math.ceil(phones.length / itemsPerPage)));\n  };\n\n  const handlePrevPage = () => {\n    setCurrentPage((prevPage) => Math.max(prevPage - 1, 1));\n  };\n\n  const handleSearchInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchInput(e.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <>\n      <div className=\"folder-holder\">\n        <button type=\"button\" className=\"home-button\">\n          <img src=\"img/Home.svg\" alt=\"Home\" />\n        </button>\n        <img src=\"img/Chevron-right.svg\" alt=\"Chevron\" />\n        <p className=\"page-name\">Phones</p>\n      </div>\n      <h3 className=\"page-title\">Mobile phones</h3>\n      <p className=\"product-counter\">\n        {productCounts.phones}\n        {' '}\n        models\n      </p>\n      <div className=\"page-container\">\n        <div className=\"sort\">\n          <label htmlFor=\"sort\" className=\"label-text\">Sort by:</label>\n          <select\n            id=\"sort\"\n            value={sortBy}\n            onChange={handleSortChange}\n            className=\"select-sorter\"\n          >\n            <option value=\"name\">Name</option>\n            <option value=\"price\">Price</option>\n            <option value=\"discount\">Discount</option>\n          </select>\n        </div>\n        <div className=\"items\">\n          <label\n            htmlFor=\"itemsPerPage\"\n            className=\"label-text\"\n          >\n            Items per Page:\n          </label>\n          <select\n            id=\"itemsPerPage\"\n            value={itemsPerPage}\n            onChange={handleItemsPerPageChange}\n            className=\"select-items\"\n          >\n            <option value={4}>4</option>\n            <option value={8}>8</option>\n            <option value={16}>16</option>\n          </select>\n        </div>\n      </div>\n      <div className=\"search-container\">\n        <input\n          className=\"search-input\"\n          type=\"text\"\n          placeholder=\"Search in phones...\"\n          style={{ width: '327px', height: '64px' }}\n          value={searchInput}\n          onChange={handleSearchInputChange}\n        />\n      </div>\n      <div className=\"products-container\">\n        {sortProducts(phones)\n          .slice(getRangeForCurrentPage().startIndex,\n            getRangeForCurrentPage().endIndex)\n          .map((phone) => (\n            <ProductCard\n              key={phone.id}\n              productId={phone.id}\n              onAddToFavorite={handleAddToFavorite}\n              onAddToCart={() => { }}\n            />\n          ))}\n      </div>\n      <div className=\"slider-holder\">\n        <button\n          type=\"button\"\n          className=\"slider-button left\"\n          aria-label=\"Previous Page\"\n          onClick={handlePrevPage}\n        />\n        {Array.from(\n          {\n            length: Math.ceil(phones.length\n              / itemsPerPage),\n          }, (_, index) => index + 1,\n        ).map((page) => (\n          <button\n            type=\"button\"\n            className={`slider-button ${currentPage === page ? 'selected' : ''}`}\n            key={page}\n            onClick={() => handlePageChange(page)}\n          >\n            {page}\n          </button>\n        ))}\n        <button\n          type=\"button\"\n          className=\"slider-button right\"\n          aria-label=\"Next Page\"\n          onClick={handleNextPage}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Phones;\n","import React, { useState, useEffect, ChangeEvent } from 'react';\nimport ProductCard from '../ProductCard/Productcard';\nimport './tablets.scss';\nimport { Product } from '../ProductCard/types';\n\nconst Tablets: React.FC = () => {\n  const [tablets, setTablets] = useState<Product[]>([]);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [itemsPerPage, setItemsPerPage] = useState<number>(16);\n  const [sortBy, setSortBy] = useState<string>('name');\n  const [productCounts, setProductCounts] = useState({\n    tablets: 0,\n    phones: 0,\n    accessories: 0,\n  });\n  const [favoriteProducts, setFavoriteProducts] = useState<string[]>([]);\n  const [searchInput, setSearchInput] = useState<string>('');\n\n  useEffect(() => {\n    const storedFavoritesString = localStorage.getItem('favorites');\n    const storedFavorites = storedFavoritesString\n      ? JSON.parse(storedFavoritesString)\n      : [];\n\n    setFavoriteProducts(storedFavorites);\n  }, []);\n\n  useEffect(() => {\n    fetch(\n      'https://mate-academy.github.io/react_phone-catalog/api/products.json',\n    )\n      .then((response) => response.json())\n      .then((data: Product[]) => {\n        const tabletProducts = data.filter(\n          (product: Product) => product.type === 'tablet',\n        );\n        const filteredTablets = tabletProducts.filter((\n          tablet: Product,\n        ) => tablet.name.toLowerCase().includes(searchInput.toLowerCase()));\n\n        setTablets(filteredTablets);\n\n        const counts = data.reduce(\n          (acc, item) => {\n            const updatedAcc = { ...acc };\n\n            if (item.type === 'tablet') {\n              updatedAcc.tablets += 1;\n            } else if (item.type === 'phone') {\n              updatedAcc.phones += 1;\n            } else if (item.type === 'accessory') {\n              updatedAcc.accessories += 1;\n            }\n\n            return updatedAcc;\n          },\n          { tablets: 0, phones: 0, accessories: 0 },\n        );\n\n        setProductCounts(counts);\n      })\n      .catch((error) => setProductCounts(error));\n  }, [searchInput]);\n\n  const handleAddToFavorite = (productId: string) => {\n    if (!favoriteProducts.includes(productId)) {\n      const updatedFavorites = [...favoriteProducts, productId];\n\n      setFavoriteProducts(updatedFavorites);\n      localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n    }\n  };\n\n  const handleSortChange = (e: ChangeEvent<HTMLSelectElement>) => {\n    setSortBy(e.target.value);\n    setCurrentPage(1);\n  };\n\n  const handlePageChange = (newPage: number) => {\n    setCurrentPage(newPage);\n  };\n\n  const handleItemsPerPageChange = (e: ChangeEvent<HTMLSelectElement>) => {\n    setItemsPerPage(parseInt(e.target.value, 10));\n    setCurrentPage(1);\n  };\n\n  const sortProducts = (data: Product[]) => {\n    return data.sort((a, b) => {\n      if (sortBy === 'name') {\n        return a.name.localeCompare(b.name);\n      }\n\n      if (sortBy === 'price') {\n        return a.price - b.price;\n      }\n\n      if (sortBy === 'discount') {\n        return (b.discount || 0) - (a.discount || 0);\n      }\n\n      return 0;\n    });\n  };\n\n  const getRangeForCurrentPage = () => {\n    const startIndex = (currentPage - 1) * itemsPerPage;\n    const endIndex = startIndex + itemsPerPage;\n\n    return { startIndex, endIndex };\n  };\n\n  const handleNextPage = () => {\n    setCurrentPage((prevPage) => Math.min(\n      prevPage + 1, Math.ceil(tablets.length / itemsPerPage),\n    ));\n  };\n\n  const handlePrevPage = () => {\n    setCurrentPage((prevPage) => Math.max(prevPage - 1, 1));\n  };\n\n  const handleSearchInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setSearchInput(e.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <>\n      <div className=\"folder-holder\">\n        <button type=\"button\" className=\"home-button\">\n          <img src=\"img/Home.svg\" alt=\"Home\" />\n        </button>\n        <img src=\"img/Chevron-right.svg\" alt=\"Chevron\" />\n        <p className=\"page-name\">Tablets</p>\n      </div>\n      <h3 className=\"page-title\">Tablets</h3>\n      <p className=\"product-counter\">\n        {productCounts.tablets}\n        {' '}\n        models\n      </p>\n      <div className=\"page-container\">\n        <div className=\"sort\">\n          <label htmlFor=\"sort\" className=\"label-text\">\n            Sort by:\n          </label>\n          <select\n            id=\"sort\"\n            value={sortBy}\n            onChange={handleSortChange}\n            className=\"select-sorter\"\n          >\n            <option value=\"name\">Name</option>\n            <option value=\"price\">Price</option>\n            <option value=\"discount\">Discount</option>\n          </select>\n        </div>\n        <div className=\"items\">\n          <label\n            htmlFor=\"itemsPerPage\"\n            className=\"label-text\"\n          >\n            Items per Page:\n          </label>\n          <select\n            id=\"itemsPerPage\"\n            value={itemsPerPage}\n            onChange={handleItemsPerPageChange}\n            className=\"select-items\"\n          >\n            <option value={4}>4</option>\n            <option value={8}>8</option>\n            <option value={16}>16</option>\n          </select>\n        </div>\n      </div>\n      <div className=\"search-container\">\n        <input\n          className=\"search-input\"\n          type=\"text\"\n          placeholder=\"Search in tablets...\"\n          style={{ width: '327px', height: '64px' }}\n          value={searchInput}\n          onChange={handleSearchInputChange}\n        />\n      </div>\n      <div className=\"products-container\">\n        {sortProducts(tablets).slice(\n          getRangeForCurrentPage().startIndex,\n          getRangeForCurrentPage().endIndex,\n        ).map((tablet) => (\n          <ProductCard\n            key={tablet.id}\n            productId={tablet.id}\n            onAddToFavorite={handleAddToFavorite}\n            onAddToCart={() => { }} // Add your implementation for onAddToCart\n          />\n        ))}\n      </div>\n      <div className=\"slider-holder\">\n        <button\n          className=\"slider-button left\"\n          onClick={handlePrevPage}\n          type=\"button\"\n          aria-label=\"Previous Page\"\n        />\n        {Array.from({\n          length: Math.ceil(tablets.length / itemsPerPage),\n        }, (_, index) => index + 1).map((page) => (\n          <button\n            className={`slider-button ${currentPage === page ? 'selected' : ''}`}\n            key={page}\n            onClick={() => handlePageChange(page)}\n            type=\"button\"\n            aria-label={`Go to Page ${page}`}\n          >\n            {page}\n          </button>\n        ))}\n        <button\n          className=\"slider-button right\"\n          onClick={handleNextPage}\n          type=\"button\"\n          aria-label=\"Next Page\"\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Tablets;\n","// Favorites.tsx\nimport React, { useState, useEffect, ChangeEvent } from 'react';\nimport ProductCard from '../ProductCard/Productcard';\nimport { useFavoriteContext } from '../favoritescontext/FavoriteContext';\n\nconst Favorites: React.FC = () => {\n  const { favoriteProducts, setFavoriteProducts } = useFavoriteContext();\n  const [searchInput, setSearchInput] = useState<string>('');\n\n  useEffect(() => {\n    const storedFavoritesString: string | null\n      = localStorage.getItem('favorites');\n\n    if (storedFavoritesString !== null) {\n      const storedFavorites: string[] = JSON.parse(storedFavoritesString);\n\n      setFavoriteProducts(storedFavorites);\n    } else {\n      setFavoriteProducts([]);\n    }\n  }, []);\n\n  const handleAddToCart = (productId: string) => {\n    // Your implementation for adding to cart\n    return productId;\n  };\n\n  const handleSearchInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setSearchInput(e.target.value);\n  };\n\n  const filteredFavorites = favoriteProducts.filter(\n    (productId: string) => productId\n      .toLowerCase().includes(searchInput.toLowerCase()),\n  );\n\n  return (\n    <>\n      <div className=\"folder-holder\">\n        <button type=\"button\" className=\"home-button\">\n          <img src=\"img/Home.svg\" alt=\"Home\" />\n        </button>\n        <img src=\"/img/Chevron-right.svg\" alt=\"Chevron\" />\n        <p className=\"page-name\">Favorites</p>\n      </div>\n      <h3 className=\"page-title\">Favorites</h3>\n      <p className=\"product-counter\">\n        {favoriteProducts.length > 1\n          ? `${favoriteProducts.length} items`\n          : `${favoriteProducts.length} item`}\n      </p>\n      <div className=\"search-container\">\n        <input\n          className=\"search-input\"\n          type=\"text\"\n          placeholder=\"Search in favorites...\"\n          style={{ width: '327px', height: '64px' }}\n          value={searchInput}\n          onChange={handleSearchInputChange}\n        />\n      </div>\n      <div className=\"products-container\">\n        {filteredFavorites.map((productId: string) => (\n          <ProductCard\n            key={productId}\n            productId={productId}\n            onAddToCart={handleAddToCart}\n            onAddToFavorite={handleAddToCart}\n          />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default Favorites;\n","import { useState, useEffect } from 'react';\nimport { useCartContext } from '../cartcontext/cartcontext';\nimport './cartcard.scss';\nimport { Product } from '../ProductCard/types';\n\ninterface CartCardProps {\n  productId: string;\n  onRemoveFromCart: (productId: string) => void;\n}\n\nconst CartCard: React.FC<CartCardProps> = ({ productId }) => {\n  const { cartProducts, addToCart, removeFromCart } = useCartContext();\n  const [product, setProduct] = useState<Product | null>(null);\n\n  const getCounterForProduct = () => {\n    const cartProduct = cartProducts.find(\n      (item: Product) => item.id === productId,\n    );\n\n    return cartProduct ? cartProduct.quantity : 0;\n  };\n\n  useEffect(() => {\n    fetch(\n      'https://mate-academy.github.io/react_phone-catalog/api/products.json',\n    )\n      .then((response) => response.json())\n      .then((data: Product[]) => {\n        const foundProduct = data.find((item) => item.id === productId);\n\n        if (foundProduct) {\n          setProduct(foundProduct);\n        }\n      })\n      .catch((error) => setProduct(error));\n  }, [productId]);\n\n  if (!product) {\n    return null;\n  }\n\n  const handleRemoveFromCartClick = () => {\n    removeFromCart(productId);\n  };\n\n  const handleAddClick = () => {\n    addToCart(productId);\n  };\n\n  const handleRemoveClick = () => {\n    if (getCounterForProduct() > 1) {\n      removeFromCart(productId);\n    }\n  };\n\n  const totalprice = () => `${product.price * getCounterForProduct()}$`;\n\n  return (\n    <div className=\"cart-card\">\n      <button type=\"button\" className=\"x\" onClick={handleRemoveFromCartClick}>\n        <img src=\"img\\Close.svg\" alt=\"close\" />\n      </button>\n      <img src={product.imageUrl} className=\"img\" alt={product.name} />\n      <div className=\"name\">{product.name}</div>\n      <div className=\"buttons-holder1\">\n        <button type=\"button\" className=\"plusminus\" onClick={handleRemoveClick}>\n          <img src=\"img\\Minus.svg\" className=\"\" alt=\"minus\" />\n        </button>\n        <div>{getCounterForProduct()}</div>\n        <button type=\"button\" className=\"plusminus\" onClick={handleAddClick}>\n          <img src=\"img\\Plus.svg\" className=\"\" alt=\"plus\" />\n        </button>\n      </div>\n      <div className=\"totalprice\">{totalprice()}</div>\n    </div>\n  );\n};\n\nexport default CartCard;\n","import { useState, useEffect } from 'react';\n\nconst useProducts = () => {\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    fetch(\n      'https://mate-academy.github.io/react_phone-catalog/_new/products.json',\n    )\n      .then((response) => response.json())\n      .then((data) => setProducts(data))\n      .catch((error) => setProducts(error));\n  }, []);\n\n  return products;\n};\n\nexport default useProducts;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport CartCard from '../CartCard/cartcard';\nimport useProducts from '../useproducts/useProducts';\nimport { useCartContext } from '../cartcontext/cartcontext';\nimport './cart.scss';\nimport { Product } from '../ProductCard/types';\n\ninterface CartProduct {\n  // eslint-disable-next-line react/no-unused-prop-types\n  id: string;\n  // eslint-disable-next-line react/no-unused-prop-types\n  quantity: number;\n}\n\nconst Cart: React.FC = () => {\n  const { cartProducts, removeFromCart } = useCartContext();\n  const [total, setTotal] = useState<number>(0);\n  const products: Product[] = useProducts();\n\n  const handleRemoveFromCart = (productId: string) => {\n    removeFromCart(productId);\n  };\n\n  const calculateTotal = () => {\n    const calculatedTotal = cartProducts.reduce(\n      (acc: number, { id, quantity }: CartProduct) => {\n        const foundProduct = products.find(\n          (item: Product) => item.id === id,\n        );\n\n        if (foundProduct) {\n          const productTotal = foundProduct.price * quantity;\n\n          return acc + productTotal;\n        }\n\n        return acc;\n      }, 0,\n    );\n\n    setTotal(calculatedTotal);\n  };\n\n  useEffect(() => {\n    calculateTotal();\n  }, [cartProducts, products]);\n\n  return (\n    <>\n      <div className=\"product-div\">\n        <div className=\"page-back__holder\">\n          <img\n            src=\"/img/Chevron-left.svg\"\n            alt=\"Chevron\"\n            className=\"folder-chevron\"\n          />\n          <Link className=\"page-back\" to=\"/\">\n            Back\n          </Link>\n        </div>\n        <h3 className=\"title\">Cart</h3>\n        <div className=\"cart-holder\">\n          <div className=\"cart-cards\">\n            {cartProducts.map(({ id }: CartProduct) => (\n              <CartCard\n                key={id}\n                productId={id}\n                onRemoveFromCart={handleRemoveFromCart}\n              />\n            ))}\n          </div>\n          <div className=\"total\">\n            <div className=\"total-money\">\n              $\n              {total.toFixed(2)}\n            </div>\n            <div className=\"total-total\">Total for your items</div>\n\n            <div className=\"line total\" />\n            <button type=\"button\" className=\"checkout\">\n              Checkout\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Cart;\n","import { createBrowserRouter } from 'react-router-dom';\nimport { MainLayout } from '../Layouts/MainLayout';\nimport Home from '../Pages/Home';\nimport ProductDetailsPage from '../Components/details/details';\nimport Phones from '../Components/Phones/phones';\nimport Tablets from '../Components/Tablets/tablets';\nimport Favorites from '../Components/Favorites/favorites';\nimport Cart from '../Components/Cart/cart';\n\nexport const Router = createBrowserRouter([\n  {\n    path: '/',\n    element: <MainLayout />,\n    children: [\n      {\n        path: '/',\n        element: <Home />,\n      },\n      {\n        path: '/:productId',\n        element: <ProductDetailsPage />,\n      },\n      {\n        path: '/phones',\n        element: <Phones />,\n      },\n      {\n        path: '/tablets',\n        element: <Tablets />,\n      },\n      {\n        path: '/favourites',\n        element: <Favorites />,\n      },\n      {\n        path: '/cart',\n        element: <Cart />,\n      },\n    ],\n  },\n]);\n","import './App.scss';\nimport './Components/ProductCard/productcard.scss';\nimport { RouterProvider } from 'react-router-dom';\nimport { Router } from './Routes/routes';\n\nconst App = () => (\n  <div className=\"App\">\n    <RouterProvider router={Router} />\n  </div>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}